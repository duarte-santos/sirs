/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.13'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

def grpcVersion = '1.33.1' // CURRENT_GRPC_VERSION
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

dependencies {    
    implementation 'mysql:mysql-connector-java:8.0.22'
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

task Server(type: CreateStartScripts) {
    mainClassName = 'pt.tecnico.examples.contacttracing.ServerApp'
    applicationName = 'contacttracing-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task Health(type: CreateStartScripts) {
    mainClassName = 'pt.tecnico.examples.contacttracing.HealthApp'
    applicationName = 'contacttracing-health'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task Client(type: CreateStartScripts) {
    mainClassName = 'pt.tecnico.examples.contacttracing.ClientApp'
    applicationName = 'contacttracing-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}


applicationDistribution.into('bin') {
    from(Server)
    from(Health)
    from(Client)
    fileMode = 0755
}
